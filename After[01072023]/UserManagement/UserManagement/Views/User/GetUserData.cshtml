@model UserManagement.Models.Models.UserModel
@{
    ViewBag.Title = "GetUserData";
}

<h2>GetUserData</h2>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <label>UserId : </label>
        </div>
        <div class="col-md-6">
            @Model.Id
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>FirstName : </label>
        </div>
        <div class="col-md-6">
            @Model.FirstName
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>LastName : </label>
        </div>
        <div class="col-md-6">
            @Model.LastName
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>Email : </label>
        </div>
        <div class="col-md-6">
            @Model.Email
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>Date OF Birth : </label>
        </div>
        <div class="col-md-6">
            @Model.DOB
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>Address : </label>
        </div>
        <div class="col-md-6">
            @Model.Address
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>Country : </label>
        </div>
        <div class="col-md-6">
            @Model.CountryName
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>State : </label>
        </div>
        <div class="col-md-6">
            @Model.Statename
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>City : </label>
        </div>
        <div class="col-md-6">
            @Model.CityName
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>Files : </label>
        </div>
        <div class="col-md-6">
            @Model.files
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>Gender : </label>
        </div>
        <div class="col-md-6">
            @Model.Gender
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>Hobbies : </label>
        </div>
        <div class="col-md-6">
            @Model.Hobbies
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>Profile pic : </label>
        </div>
        <div class="col-md-6">
           
            <img src="~/UserImages/@Model.IMAGEPath" alt="" height=100 width=200 />
        </div>
    </div>
    <div>
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModel">Update Profile</button>
    </div>
</div>
<div class="modal fade" id="myModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("SignUp", "User", FormMethod.Post, new
                {
                    enctype = "multipart/form-data"
                }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>UserModel</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m => m.Id)
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @if (ViewBag.CountryList != null)
                                {
                                    @Html.DropDownListFor(model => model.CountryId, ViewBag.CountryList as SelectList, "--Select Country--", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                                }

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("StateId", new List<SelectListItem>(), "-- Select State --", new { id = "StateId", @class = "form-control" })
                                <!--<select id="StateId" name="state" class="form-control">-->
                                @*<option>--Select State--</option>*@
                                <!--</select>-->
                                @*@Html.DropDownListFor(model => model.StateId, ViewBag.StateList as SelectList, "--Select Country--", new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })


                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("CityId", new List<SelectListItem>(), "-- Select City --", new { id = "CityId", @class = "form-control" })
                                <!--<select id="CityId" name="state" class="form-control">-->
                                @*<option>--Select City--</option>*@
                                <!--</select>-->
                                @*@Html.DropDownListFor(model => model.CityId," ","--Select Country--", new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })


                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.files, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="file" name="files" required multiple />
                                @*@Html.EditorFor(model => model.files,new { htmlAttributes = new { @class = "form-control" ,@type="file",@multiple="multiple"} })*@
                                @Html.ValidationMessageFor(model => model.files, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="form-check-inline">
                                    @Html.RadioButton("Gender", "Male", new { @class = "form-check-input" })
                                    @Html.Label("Gender", "Male", new { @class = "form-check-label" })
                                    @Html.RadioButton("Gender", "Female", new { @class = "form-check-input" })
                                    @Html.Label("Gender", "Female", new { @class = "form-check-label" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div>
                                    <input type="checkbox" id="coding" name="hobby" value="Coding" />
                                    <label for="coding">Coding</label>
                                </div>
                                <div>
                                    <input type="checkbox" id="cooking" name="hobby" value="Cooking" />
                                    <label for="cooking">Cooking</label>
                                </div>
                                <div>
                                    <input type="checkbox" id="sketch" name="hobby" value="Sketching" />
                                    <label for="sketch">Sketching</label>
                                </div>
                                @*@Html.EditorFor(model => model.Hobbies, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.IMAGEPath, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.IMAGEPath, new { @type = "file" })
                                @Html.ValidationMessageFor(model => model.IMAGEPath, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
               <button>Save</button>
            </div>
        </div>
    </div>
</div>